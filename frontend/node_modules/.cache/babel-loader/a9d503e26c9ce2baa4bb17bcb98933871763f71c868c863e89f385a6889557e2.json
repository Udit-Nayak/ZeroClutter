{"ast":null,"code":"var _jsxFileName = \"D:\\\\web\\\\DUPLICATRO\\\\frontend\\\\src\\\\DriveDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport FileTree from \"./components/FileTree\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DriveDashboard() {\n  _s();\n  const [token, setToken] = useState(\"\");\n  const [files, setFiles] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    const params = new URLSearchParams(window.location.search);\n    const t = params.get(\"token\");\n    if (t) {\n      setToken(t);\n      fetchDriveFiles(t);\n    } else {\n      setError(\"No token found in URL.\");\n    }\n  }, []);\n  const fetchDriveFiles = async token => {\n    try {\n      setLoading(true);\n      setError(\"\");\n\n      // Trigger scanning\n      await axios.post(\"http://localhost:5000/api/driveFiles/scan\", {}, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      // Get the file list\n      const res = await axios.get(\"http://localhost:5000/api/driveFiles/list\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const flatFiles = res.data;\n      const fileTree = buildTree(flatFiles);\n      setFiles(fileTree);\n    } catch (err) {\n      console.error(\"Failed to fetch files:\", err);\n      setError(\"Failed to fetch files. Make sure you're logged in and Drive is connected.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const buildTree = items => {\n    const map = {};\n    const roots = [];\n    items.forEach(item => {\n      map[item.file_id] = {\n        ...item,\n        children: []\n      };\n    });\n    items.forEach(item => {\n      const parentId = item.parent_id;\n      if (parentId && map[parentId] && parentId !== item.file_id) {\n        map[parentId].children.push(map[item.file_id]);\n      } else {\n        roots.push(map[item.file_id]);\n      }\n    });\n    return roots;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"2rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Drive Files\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 1\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }, this) : files.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No files found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(FileTree, {\n      nodes: files\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 1\n  }, this);\n}\n_s(DriveDashboard, \"7/HCd7RJc0m8U1LGPuYB1LZzpME=\");\n_c = DriveDashboard;\nexport default DriveDashboard;\nvar _c;\n$RefreshReg$(_c, \"DriveDashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","FileTree","jsxDEV","_jsxDEV","DriveDashboard","_s","token","setToken","files","setFiles","loading","setLoading","error","setError","params","URLSearchParams","window","location","search","t","get","fetchDriveFiles","post","headers","Authorization","res","flatFiles","data","fileTree","buildTree","err","console","items","map","roots","forEach","item","file_id","children","parentId","parent_id","push","style","padding","fileName","_jsxFileName","lineNumber","columnNumber","color","length","nodes","_c","$RefreshReg$"],"sources":["D:/web/DUPLICATRO/frontend/src/DriveDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport FileTree from \"./components/FileTree\";\r\n\r\nfunction DriveDashboard() {\r\nconst [token, setToken] = useState(\"\");\r\nconst [files, setFiles] = useState([]);\r\nconst [loading, setLoading] = useState(false);\r\nconst [error, setError] = useState(\"\");\r\n\r\nuseEffect(() => {\r\nconst params = new URLSearchParams(window.location.search);\r\nconst t = params.get(\"token\");\r\nif (t) {\r\nsetToken(t);\r\nfetchDriveFiles(t);\r\n} else {\r\nsetError(\"No token found in URL.\");\r\n}\r\n}, []);\r\n\r\nconst fetchDriveFiles = async (token) => {\r\ntry {\r\nsetLoading(true);\r\nsetError(\"\");\r\n\r\n  // Trigger scanning\r\n  await axios.post(\r\n    \"http://localhost:5000/api/driveFiles/scan\",\r\n    {},\r\n    {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    }\r\n  );\r\n\r\n  // Get the file list\r\n  const res = await axios.get(\"http://localhost:5000/api/driveFiles/list\", {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n\r\n  const flatFiles = res.data;\r\n  const fileTree = buildTree(flatFiles);\r\n  setFiles(fileTree);\r\n} catch (err) {\r\n  console.error(\"Failed to fetch files:\", err);\r\n  setError(\"Failed to fetch files. Make sure you're logged in and Drive is connected.\");\r\n} finally {\r\n  setLoading(false);\r\n}\r\n};\r\n\r\nconst buildTree = (items) => {\r\nconst map = {};\r\nconst roots = [];\r\n\r\nitems.forEach((item) => {\r\n  map[item.file_id] = { ...item, children: [] };\r\n});\r\n\r\nitems.forEach((item) => {\r\n  const parentId = item.parent_id;\r\n  if (parentId && map[parentId] && parentId !== item.file_id) {\r\n    map[parentId].children.push(map[item.file_id]);\r\n  } else {\r\n    roots.push(map[item.file_id]);\r\n  }\r\n});\r\n\r\nreturn roots;\r\n};\r\n\r\nreturn (\r\n<div style={{ padding: \"2rem\" }}>\r\n<h2>Your Drive Files</h2>\r\n  {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n  {loading ? (\r\n    <p>Loading...</p>\r\n  ) : files.length === 0 ? (\r\n    <p>No files found.</p>\r\n  ) : (\r\n    <FileTree nodes={files} />\r\n  )}\r\n</div>\r\n\r\n);\r\n}\r\n\r\nexport default DriveDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}